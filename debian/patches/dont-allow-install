# remove the code to install thin's init script ("thin install"), the Debian package does that.

--- a/lib/thin/controllers/service.rb
+++ b/lib/thin/controllers/service.rb
@@ -32,30 +32,7 @@ module Thin
       end
     
       def install(config_files_path=DEFAULT_CONFIG_PATH)
-        if File.exist?(INITD_PATH)
-          log_info "Thin service already installed at #{INITD_PATH}"
-        else
-          log_info "Installing thin service at #{INITD_PATH} ..."
-          sh "mkdir -p #{File.dirname(INITD_PATH)}"
-          log_info "writing #{INITD_PATH}"        
-          File.open(INITD_PATH, 'w') do |f|
-            f << ERB.new(File.read(TEMPLATE)).result(binding)
-          end
-          sh "chmod +x #{INITD_PATH}" # Make executable
-        end
-      
-        sh "mkdir -p #{config_files_path}"
-
-        log_info ''
-        log_info "To configure thin to start at system boot:"
-        log_info "on RedHat like systems:"
-        log_info "  sudo /sbin/chkconfig --level 345 #{NAME} on"
-        log_info "on Debian-like systems (Ubuntu):"
-        log_info "  sudo /usr/sbin/update-rc.d -f #{NAME} defaults"
-        log_info "on Gentoo:"
-        log_info "  sudo rc-update add #{NAME} default"
-        log_info ''
-        log_info "Then put your config files in #{config_files_path}"
+        log ">> Thin service is already installed at #{INITD_PATH} by the debian package"
       end
     
       private
